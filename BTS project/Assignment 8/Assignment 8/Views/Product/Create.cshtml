@model Assignment_8.Controllers.Product_vm
<script src="//cdn.ckeditor.com/4.5.7/standard/ckeditor.js"></script>
@using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype="multipart/form-data"}))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4><strong>New Product</strong></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.productName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.productName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.productName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.productPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.productPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.productPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.productImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="file" id="file"/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-1">
                @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control"}})
                @Html.ValidationMessageFor(model => model.quantity, "", new { @class ="text-danger"})
            </div>
        </div>

        <div class="form-group">
            
        </div>

       <h4><strong>Product Description</strong></h4>
        <hr />
        <div class="form-group">
                <div class="col-lg-9">
                    @Html.EditorFor(model => model.productDescription, new { @class = "control-label col-lg-9"})
                    @Html.ValidationMessageFor(model => model.productDescription, "", new { @class = "text-danger" })
                </div>
        </div>
        <script>CKEDITOR.replace('productDescription');</script>

        <h4><strong>Shipping Information</strong></h4>
        <hr />
        
        @Html.LabelFor(model => model.productWeight, htmlAttributes: new { @class = "control-label col-lg-2" })
        <div class="col-lg-1">
            @Html.EditorFor(model => model.productWeight, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.productWeight, "", new { @class = "text-danger" })
        </div>
        
        @Html.LabelFor(model => model.productLength, htmlAttributes: new { @class = "control-label col-lg-1" })
        <div class="col-lg-1">
            @Html.EditorFor(model => model.productLength, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.productLength, "", new { @class = "text-danger" })
        </div>
        
        @Html.LabelFor(model => model.productWidth, htmlAttributes: new { @class = "control-label col-lg-1" })
        <div class="col-lg-1">
            @Html.EditorFor(model => model.productWidth, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.productWidth, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(model => model.productHeight, htmlAttributes: new { @class = "control-label col-lg-1" })
        <div class="col-lg-1">
            @Html.EditorFor(model => model.productHeight, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.productHeight, "", new { @class = "text-danger" })
        </div>
            
        <div class="form-group">
            <div class="col-md-offset-5 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
